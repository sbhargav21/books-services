plugins {
    // the plugins DSL is replacing apply plugin over time for Java-plugins. It is therefore favoured over the legacy "apply plugin:" approach
    id "java"
    id "groovy"
    id "eclipse"
    id 'org.hidetake.swagger.generator' version '2.10.0'
    id "jacoco"
    id "org.sonarqube" version "2.6.2"
    id 'com.commercehub.cucumber-jvm' version '0.13'
}

group = 'demo.books'
version = '1.0'

description = "Books micro services"

sourceCompatibility = 1.8
targetCompatibility = 1.8
tasks.withType(JavaCompile) {
	options.encoding = 'UTF-8'
}

repositories {
        
     maven { url "https://repo.spring.io/libs-snapshot" }
     maven { url "http://repo.maven.apache.org/maven2" }
}

// Swagger Configuration
swaggerSources {
 
    books {
        def booksYaml = "${rootDir}/src/main/resources/api/books.yaml"
        def configJson = "${rootDir}/src/main/resources/api/config.json"
        inputFile = file(booksYaml)
        def ignoreFile = "${rootDir}/src/main/resources/api/.swagger-codegen-ignore"
        code {
            language = 'spring'
            configFile = file(configJson)
            rawOptions = ['--ignore-file-override', ignoreFile]
            components = ['models', 'apis']
            dependsOn validation
        }
    }
}


compileJava {
    dependsOn processResources
    dependsOn swaggerSources.books.code
    source "${swaggerSources.books.code.outputDir}/src/main/java"
 
}
 
sourceSets {
    unitTest {
        java { srcDir 'src/test/groovy' }
        resources { srcDir 'src/test/resources' }
        compileClasspath += sourceSets.main.runtimeClasspath
    }
    main {
        java { srcDirs += "${swaggerSources.books.code.outputDir}/src/main/java"}
    }
}

// SONARQUBE Configuration
sonarqube {
    properties {
        property "sonar.projectName", "${rootProject.name}"
        property "sonar.projectKey", "${rootProject.name}"
        property "sonar.projectVersion", "${releaseVersion}"
        property "sonar.buildbreaker.skip","true"
        property "sonar.java.coveragePlugin", "jacoco"
        property "sonar.jacoco.reportPaths", "${buildDir}/jacoco/test.exec" // path to coverage data
        property "sonar.sources", "src"
        property "sonar.exclusions", "**/build/**"
        property "sonar.test.exclusions", "src/test/**"
    }
}

// Test Configurations
test {
    reports {
        junitXml.enabled = true
        html.enabled = true
    }
    testLogging { // Show that tests are run in the command-line output
        events 'passed' // 'started' is also an option
    }
}
 
//Ensure that the HTML reports of unit and integration tests are written to different directories.
tasks.withType(Test) {
    reports.html.destination = file("${reporting.baseDir}/${name}")
}
 
// Cucumber Test Configurations
addCucumberSuite 'cucumberTest'
 
cucumber { maxParallelForks = 1 }
 
cucumberTest {
 
    group = "Verification"
    description 'Runs the Acceptance Tests via connecting to a running system.'
    stepDefinitionRoots = ['classpath:demo']
    junitReport = true
    tags = ['~@WIP']
    if (project.hasProperty('cucumberTags')) {
        tags = [cucumberTags]
    }
}
 
// Needed to do this so we only display this message if the cucumberTest task was run
cucumberTest.doLast {
    if (tasks.cucumberTest.didWork) {
        println 'Running Cucumber tests with tag of: ' + tags
    }
}
 
// Jacoco Configurations
jacoco { toolVersion = "0.7.9" }
 
 
jacocoTestReport {
    group = "Reporting"
    reports {
        xml.enabled true
        html.destination "${buildDir}/reports/coverage"
    }
}
 
configurations {
    cucumberTestCompile.extendsFrom testCompile
    cucumberTestRuntime.extendsFrom testRuntime
}
dependencies {
    compile 'io.swagger:swagger-annotations:1.5.18'
    swaggerCodegen 'io.swagger:swagger-codegen-cli:2.3.1'
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-web', version:'2.1.3.RELEASE'
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-thymeleaf', version:'2.1.3.RELEASE'
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-data-jpa', version:'2.1.3.RELEASE'
    runtime group: 'com.h2database', name: 'h2', version:'1.4.197'
    testCompile group: 'org.springframework.boot', name: 'spring-boot-starter-test', version:'2.1.3.RELEASE'
}
